
Showing logs for build [32mromanrzes-environment-test-clus-cb2j8-4[0m stage [32mrelease[0m and container [32mstep-credential-initializer-s7bmd[0m
{"level":"warn","ts":1587982772.2255127,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/0.8.0-**-support-backwards-incompats\" is not a valid GitHub commit ID"}
{"level":"info","ts":1587982772.2262022,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mromanrzes-environment-test-clus-cb2j8-4[0m stage [32mrelease[0m and container [32mstep-working-dir-initializer-c9zdn[0m
{"level":"warn","ts":1587982773.5568619,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1587982773.5579073,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully executed command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mromanrzes-environment-test-clus-cb2j8-4[0m stage [32mrelease[0m and container [32mstep-place-tools[0m

Showing logs for build [32mromanrzes-environment-test-clus-cb2j8-4[0m stage [32mrelease[0m and container [32mstep-git-source-romanrzes-environment-test-clus-cb2j8-pr8dn[0m
{"level":"warn","ts":1587982781.662413,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/0.8.0-**-support-backwards-incompats\" is not a valid GitHub commit ID"}
{"level":"info","ts":1587982783.1717687,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/*********/environment-test-cluster-dev.git @ v0.0.4 in path /workspace/source"}

Showing logs for build [32mromanrzes-environment-test-clus-cb2j8-4[0m stage [32mrelease[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:814c9008fcbbebe343e92ebc6a79ea52f5205600
WARNING: no SHAs to merge, falling back to initial cloned commit

Showing logs for build [32mromanrzes-environment-test-clus-cb2j8-4[0m stage [32mrelease[0m and container [32mstep-verify-secrets[0m
created directory /secrets/**-boot
loaded Secrets from: local in namespace ** with Secret **-boot-secrets
exported Secrets to file: /secrets/**-boot/secrets.yaml

Showing logs for build [32mromanrzes-environment-test-clus-cb2j8-4[0m stage [32mrelease[0m and container [32mstep-validate-git[0m
Git configured for user: jenkins-x-bot and email jenkins-x@googlegroups.com

Showing logs for build [32mromanrzes-environment-test-clus-cb2j8-4[0m stage [32mrelease[0m and container [32mstep-verify-preinstall[0m
no need to reconnect to cluster
Cloning the Jenkins X versions repo https://github.com/jenkins-x/**r-versions.git with ref refs/heads/master to /builder/home/.**/jenkins-x-versions
Locking version stream https://github.com/jenkins-x/**r-versions.git to release v0.0.22. Jenkins X will use this release rather than master to resolve all versions from now on.
writing the following to the OWNERS file for the development environment repository:
approvers:
- *********
reviewers:
- *********
WARNING: TLS is not enabled so your webhooks will be called using HTTP. This means your webhook secret will be sent to your cluster in the clear. See https://jenkins-x.io/docs/getting-started/setup/boot/#ingress for more information
Verifying the kubernetes cluster before we try to boot Jenkins X in namespace: **
Trying to lazily create any missing resources to get the current cluster ready to boot Jenkins X
Verifying Ingress...
Clearing the domain 34.89.6.205.nip.io as when using auto-DNS domains we need to regenerate to ensure its always accurate in case the cluster or ingress service is recreated

Using namespace '**' from context named '' on server ''.

Verifying Storage...
WARNING: Your requirements have not enabled cloud storage for logs - we recommend enabling this for kubernetes provider gke
WARNING: Your requirements have not enabled cloud storage for reports - we recommend enabling this for kubernetes provider gke
WARNING: Your requirements have not enabled cloud storage for repository - we recommend enabling this for kubernetes provider gke
WARNING: Your requirements have not enabled cloud storage for backup - we recommend enabling this for kubernetes provider gke
Storage configuration looks good

Validating Kaniko secret in namespace **
attempting to lazily create the deploy namespace **
Configuring Kaniko service account test-cluster-ko for project dark-arcade-274513
Service Account exists
Downloading service account key
Exceeds the maximum number of keys on service account test-cluster-ko
Cleaning up the keys of the service account test-cluster-ko
Cannot delete the key 40727d55b4a6d0a9246ccf6194ead320c64be5fd from service account test-cluster-ko: deleting the key '40727d55b4a6d0a9246ccf6194ead320c64be5fd'from service account 'test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com': failed to run 'gcloud iam service-accounts keys delete 40727d55b4a6d0a9246ccf6194ead320c64be5fd --iam-account test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com --project dark-arcade-274513 --quiet' command in directory '', output: 'ERROR: (gcloud.iam.service-accounts.keys.delete) PERMISSION_DENIED: Permission iam.serviceAccountKeys.delete is required to perform this operation on service account key projects/-/serviceAccounts/test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com/keys/40727d55b4a6d0a9246ccf6194ead320c64be5fd.'
Cannot delete the key c6a5518a3f338f262662d78d355c6773ffadc999 from service account test-cluster-ko: deleting the key 'c6a5518a3f338f262662d78d355c6773ffadc999'from service account 'test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com': failed to run 'gcloud iam service-accounts keys delete c6a5518a3f338f262662d78d355c6773ffadc999 --iam-account test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com --project dark-arcade-274513 --quiet' command in directory '', output: 'ERROR: (gcloud.iam.service-accounts.keys.delete) PERMISSION_DENIED: Permission iam.serviceAccountKeys.delete is required to perform this operation on service account key projects/-/serviceAccounts/test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com/keys/c6a5518a3f338f262662d78d355c6773ffadc999.'
Cannot delete the key a2507799743a20b316fb9c92505c3a4e84851fa0 from service account test-cluster-ko: deleting the key 'a2507799743a20b316fb9c92505c3a4e84851fa0'from service account 'test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com': failed to run 'gcloud iam service-accounts keys delete a2507799743a20b316fb9c92505c3a4e84851fa0 --iam-account test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com --project dark-arcade-274513 --quiet' command in directory '', output: 'ERROR: (gcloud.iam.service-accounts.keys.delete) PERMISSION_DENIED: Permission iam.serviceAccountKeys.delete is required to perform this operation on service account key projects/-/serviceAccounts/test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com/keys/a2507799743a20b316fb9c92505c3a4e84851fa0.'
error: failed to lazily create the kaniko secret in: **: creating the service account: creating service account key: creating a new service account key: failed to run 'gcloud iam service-accounts keys create /tmp/gke045073413/test-cluster-ko.key.json --iam-account test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com --project dark-arcade-274513' command in directory '', output: 'ERROR: (gcloud.iam.service-accounts.keys.create) PERMISSION_DENIED: Permission iam.serviceAccountKeys.create is required to perform this operation on service account projects/-/serviceAccounts/test-cluster-ko@dark-arcade-274513.iam.gserviceaccount.com.'
[31m
Pipeline failed on stage 'release' : container 'step-verify-preinstall'. The execution of the pipeline has stopped.[0m
